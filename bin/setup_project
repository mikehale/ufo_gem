require 'ufo'
require 'cooloptions'

options = CoolOptions.parse! do |o|
  o.on 'client CLIENT', 'Client to add the project for.'
  o.on 'project PROJECT', 'Project to set up.'
  o.on 'num-dispatchers NUM', 'Dispatchers to use.', 1
  o.on 'domain DOMAIN', 'Domain to host on.', nil
  o.on 'force', 'Force the setup, potentially overwriting.', false
  o.after do |r|
    o.error "Invalid client name" unless /\A\w+\z/ =~ r.client
    o.error "Client doesn't exists" unless File.exist?("/var/www/#{r.client}")
    o.error "Invalid project name" unless /\A\w+\z/ =~ r.project
    o.error "Project doesn't exist" unless File.exists?("/var/www/#{r.client}/#{r.project}")
    r.num_dispatchers = r.num_dispatchers.to_i
    o.error "Need at least one dispatcher" unless r.num_dispatchers > 0
    o.error "Invalid domain" if r.domain and /\A\w+(\.\w+)*\z/ !~ r.domain
  end
end

def options.to_h
  table
end

database_yml = "/var/www/#{options.client}/#{options.project}/shared/config/database.yml"
unless options.force
  raise "Project already set up" if File.exist?(database_yml)
end

UFO.run(%(mysql -u root --password=#{File.read('/etc/mysql/r').chomp} -e"create database if not exists #{options.client}_#{options.project}; grant all on #{options.client}_#{options.project}.* to #{options.client};"), "Created mysql database.")

options.database_password = File.read("/home/#{options.client}/.p").chomp
UFO.render database_yml, 'database.yml', options.to_h

top_ports = (Dir['/etc/mongrel_cluster/*.yml'].collect do |f|
  y = YAML.load(f)
  y['port'].to_i + y['servers'].to_i - 1
end + [7995])
options.first_port = (top_ports.max + 5)
options.ports = (options.first_port...(options.first_port + options.num_dispatchers)).to_a

UFO.render "/etc/mongrel_cluster/#{options.client}_#{options.project}.yml", 'mongrel.yml', options.to_h

conf = "/etc/httpd/apps/#{options.client}_#{options.project}"
UFO.render "#{conf}.conf", 'httpd.conf', options.to_h
UFO.run %(ln -s #{conf}.conf #{conf}-enabled.conf)
UFO.run %(/etc/init.d/httpd restart)